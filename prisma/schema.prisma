// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id Int @id() @default(autoincrement())
  fullname String
  email String
  password String
  role String
  status_delete Boolean @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  category_id Int @id() @default(autoincrement())
  name String
  description String
  status_delete Boolean @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  product Product[]
}

model WarehouseLocation{
  location_id Int @id() @default(autoincrement())
  name String
  address String
  zone String
  status_delete Boolean @default(false)
  product Product[]
  stockmovement_SLI Stockmovement[] @relation("SLI")
  stockmovement_DLI Stockmovement[] @relation("DLI")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
} 

model Product {
  product_id String @id() 
  name String
  description String
  category_id Int
  category Category @relation(fields: [category_id], references: [category_id])
  quantity Int
  unit String
  reoder_level Int
  location_id Int
  status_delete Boolean @default(false)
  warehouselocation WarehouseLocation @relation(fields: [location_id], references: [location_id])
  stockmovement   Stockmovement[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Stockmovement {
  movement_id Int @id @default(autoincrement())
  product_id String
  product Product @relation(fields: [product_id], references: [product_id])
  movement_type String
  quantity Int
  movement_date DateTime
  reference_number String
  source_location_id Int?
  destination_location_id Int?
  warehouseLocation_SLI WarehouseLocation? @relation("SLI", fields:[source_location_id], references: [location_id])
  warehouseLocation_DLI WarehouseLocation? @relation("DLI", fields:[destination_location_id], references: [location_id])
  remarks String
  status_delete Boolean @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}
